name: build_push
on:
  push:
    tags:
      - "v*"

jobs:
  wash-build:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      test-deploy: local.wadm.yaml
      wasm-bin: map-query-api_s.wasm
    permissions:
      contents: "write"
      packages: "write"
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: install go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.0"
      - name: install tinygo
        uses: acifani/setup-tinygo@v2
        with:
          tinygo-version: "0.36.0"
          install-binaryen: "false"
      - name: install wash tools
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-tools@1.225.0, wash-cli
      - name: install wit-bindgen-wrpc
        shell: bash
        run: |
          curl -LO https://github.com/bytecodealliance/wrpc/releases/download/v0.11.1/wit-bindgen-wrpc-x86_64-unknown-linux-musl;
          mv wit-bindgen-wrpc-x86_64-unknown-linux-musl wit-bindgen-wrpc
          chmod +x wit-bindgen-wrpc
          install -m 755 wit-bindgen-wrpc /usr/local/bin/
      - name: Setup registry
        env:
          WASH_REG_USER: ${{ github.actor }}
          WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          cat << EOF > package_config.toml
          [namespace_registries]
          mattilsynet = "ghcr.io"

          [registry."ghcr.io".oci]
          auth = { username = "${WASH_REG_USER}", password = "${WASH_REG_PASSWORD}"}
          EOF
          echo "WASH_PACKAGE_CONFIG_FILE=$(realpath package_config.toml)" >> $GITHUB_ENV
      - name: download dependencies
        shell: bash
        run: |
          go mod tidy
      - name: validate-yaml
        shell: bash
        run: |
          [[ ! -f wadm.yaml ]] || wash app validate wadm.yaml
          [[ ! -f local.wadm.yaml ]] || wash app validate local.wadm.yaml
      - name: wash build
        shell: bash
        run: |
          wash build
      - name: test component load
        shell: bash
        run: |
          set -xe
          wash up &
          WASH_PID=$!
          sleep 10;
          wash app deploy ${{ env.test-deploy }};
          TRIES=0
          while [[ $(wash get inventory --output=json | jq '.inventories[0].components | length') -eq 0 ]] ; do
            if [[ $TRIES -gt 10 ]]; then
              echo "❌ failed to find component in inventory output after deploying example manifest";
              exit -1;
            fi
            TRIES=$((TRIES+1));
            sleep 1;
          done;
          echo "✅ successfully started at least one component";
          wash app delete ${{ env.test-deploy }};
          kill $WASH_PID;
          exit 0;
      - name: publish package to github repository
        env:
          WASH_REG_USER: ${{ github.repository_owner }}
          WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          wash push ghcr.io/${{ github.repository }}:${{ github.ref_name }} ${{ env.wasm-bin }} --annotation org.opencontainers.image.source=${{github.server_url}}/${{ github.repository }}
        working-directory: build
